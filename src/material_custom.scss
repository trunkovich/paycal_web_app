@import 'helpers';
@import 'material_constants';

/* Material checkbox */
//$is-dark-theme: map-get($theme, is-dark);
$primary: $tealish;
$accent: $gunmetal;
$warn: $blush;
$background: $pale-grey;


// The color of the checkbox border.
$checkbox-border-color: $light-blue-grey;

// The color of the checkbox's checkmark / mixedmark.
$checkbox-mark-color: $white;

// NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,
// this does not work well with elements layered on top of one another. To get around this we
// blend the colors together based on the base color and the theme background.
//$white-30pct-opacity-on-dark: #686868;
//$black-26pct-opacity-on-light: #b0b0b0;
//$disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);
pcl-root {
  .mat-checkbox-frame {
    border-color: $checkbox-border-color;
    z-index: 1;
    border-width: 1px;
  }

  .mat-checkbox-layout {
    white-space: normal;
  }

  .mat-checkbox-checkmark {
    fill: $checkbox-mark-color;
  }

  .mat-checkbox-checkmark-path {
    // !important is needed here because a stroke must be set as an attribute on the SVG in order
    // for line animation to work properly.
    stroke: $checkbox-mark-color !important;
  }

  .mat-checkbox-mixedmark {
    background-color: $checkbox-mark-color;
  }

  .mat-checkbox-background {
    background-color: $background;
  }

  .mat-checkbox-indeterminate, .mat-checkbox-checked {
    &.mat-primary .mat-checkbox-background {
      background-color: $primary;
    }

    &.mat-accent .mat-checkbox-background {
      background-color: $accent;
    }

    &.mat-warn .mat-checkbox-background {
      background-color: $warn;
    }
  }
  .mat-checkbox:not(.mat-checkbox-disabled) {
    &.mat-primary .mat-checkbox-ripple .mat-ripple-foreground {
      background-color: rgba($primary, 0.26);
    }

    &.mat-accent .mat-checkbox-ripple .mat-ripple-foreground {
      background-color: rgba($accent, 0.26);
    }

    &.mat-warn .mat-checkbox-ripple .mat-ripple-foreground {
      background-color: rgba($warn, 0.26);
    }
  }
  .cdk-visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    text-transform: none;
    width: 1px;
  }
  [mat-ripple] {
    overflow: hidden;
  }

  .mat-checkbox:not(.mat-checkbox-disabled).mat-primary .mat-checkbox-ripple .mat-ripple-element {
    background-color: rgba(0,0,0,.0588);
  }

  .mat-checkbox.mat-checkbox-disabled {
    .mat-checkbox-background {
      background-color: $checkbox-border-color;
    }
  }

  .mat-checkbox-inner-container {
    width: 24px !important;
    height: 24px !important;
  }
}
/* Material checkbox */




/* Material dialog */
.mat-dialog-container {
  background-color: white;
}
/* Material dialog */


/* Material select */

$select-underline: $light-blue-grey;
$select-placeholder: $bluish-grey;
$foreground: $gunmetal;
$background: $pale-grey;
$primary: $tealish;
$warn: $blush;

.mat-select {
  font-size: 16px;
  width: 100%;
}

.mat-select-trigger {
  color: $select-placeholder;

  .mat-select:focus:not(.mat-select-disabled) & {
    color: $primary;
  }

  .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) & {
    color: $warn;
  }
}

.mat-select-underline {
  background-color: $select-underline;

  .mat-select:focus:not(.mat-select-disabled) & {
    background-color: $primary;
  }

  .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) & {
    background-color: $warn;
  }
}

.mat-select-arrow {
  color: $select-placeholder;

  .mat-select:focus:not(.mat-select-disabled) & {
    color: $primary;
  }

  .mat-select.ng-invalid.ng-touched:not(.mat-select-disabled) & {
    color: $warn;
  }
}

.mat-select-content {
  background: $background;
}

.mat-select-value {
  color: $foreground;

  .mat-select-disabled & {
    color: $foreground;
  }
}

.mat-option {
  &:hover:not(.mat-option-disabled), &:focus:not(.mat-option-disabled) {
    background: $light-blue-grey;
  }

  &.mat-selected {
    background: $light-blue-grey;
    color: $primary;
  }

  &.mat-option-disabled {
    color: $pale-grey;
  }

}

.mat-select-panel-done-animating {
  background: none;
}

/* Material select */

$mat-font-family: 'Open Sans', sans-serif;
pcl-root {

  //CHANGE FONT
  .mat-input-container,
  .mat-select,
  .mat-button-toggle,
  .mat-card,
  .mat-checkbox,
  .mat-list-item-content,
  .mat-radio-button,
  .mat-slide-toggle-content,
  .mat-toolbar,
  .mat-tooltip,
  %mat-button-base{
    font-family: $mat-font-family;
  }

}


/* Material input */
$input-underline-color: $light-blue-grey;
$input-placeholder-color: $bluish-grey;
$input-floating-placeholder-color: $tealish;
$input-underline-focused-color: $tealish;
$input-underline-color-accent: $tealish;
$input-underline-color-warn: $tealish;
$input-required-placeholder-color: $blush;
$input-invalid: $blush;
.mat-input-placeholder {
  color: $input-placeholder-color;

  &.mat-focused {
    color: $input-floating-placeholder-color;

    &.mat-accent {
      color: $input-underline-color-accent;
    }
    &.mat-warn {
      color: $input-underline-color-warn;
    }
  }
}

.mat-form-field {
  @extend .big-text;
  @extend .full-width;

  &.ng-touched.ng-invalid {
    .mat-input-placeholder {
      color: $input-invalid;
    }
    .mat-input-underline {
      border-color: $input-invalid;

      .mat-input-ripple {
        background-color: $input-invalid;

        &.mat-accent {
          background-color: $input-invalid;
        }
        &.mat-warn {
          background-color: $input-invalid;
        }
      }
    }
  }
}

input.mat-input-element[disabled] {
  -webkit-text-fill-color: $light-blue-grey; /* Override iOS / Android font color change */
  -webkit-opacity: 1; /* Override iOS opacity change affecting text & background color */
  color: $light-blue-grey; /* Override IE font color change */
}

input.mat-input-element:-webkit-autofill + .mat-input-placeholder,
.mat-input-placeholder.mat-float.mat-focused {
  .mat-placeholder-required {
    color: $input-required-placeholder-color;
  }
}

.mat-input-underline {
  border-color: $input-underline-color;

  .mat-input-ripple {
    background-color: $input-underline-focused-color;

    &.mat-accent {
      background-color: $input-underline-color-accent;
    }
    &.mat-warn {
      background-color: $input-underline-color-warn;
    }
  }
}
/* Material input */

.narrow-device {
  .schedule-stepper{
    mat-step-header {
      padding-left: 4px !important;
      .stepper-label {
        .label {
          font-size: 13px;
        }
        .clear-button {
          padding: 0 5px !important;
          font-size: 12px;
        }
      }
    }
    .mat-vertical-content-container {
      margin-left: 16px;
      .mat-vertical-content {
        padding: 0 17px 24px 17px;
      }
    }
    .mat-step-icon {
      margin-right: 4px !important;
    }
  }
}
