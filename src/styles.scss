/* You can add global styles to this file, and also import other style files */
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600');
//@import "~@angular/material/core/theming/prebuilt/purple-green.scss";

$image-path: 'assets/' !default;
$retina-suffix: '@2x';
$base-width: 375;
$header-height: 45px;
@import 'mixins.scss';
@import 'resets.scss';

$viridian: #1e7e8f;
$tealish: #27a5bc;
$tealish-two: #2ab0c9;
$gunmetal: #4a525a;
$bluish-grey: #808e9c;
$light-blue-grey: #d4dfea;
$pale-grey: #f7f9fb;
$blush: #f37b73;
$white: #ffffff;

html,body {height: 100%;}

body {
  font-family: 'Open Sans', sans-serif;
  font-size: 14px;
  font-weight: normal;
  font-style: normal;
  font-stretch: normal;
  color: $gunmetal;
}

.bold-text {
  font-weight: 600;
}
.weak-text {
  color: $bluish-grey;
}
.error-text {
  color: $blush;
}
.headline-text {
  font-size: 24px;
}
.headline-weak-text {
  @extend .headline-text;
  @extend .weak-text;
}
.big-text {
  font-size: 16px;
}
.big-weak-text {
  @extend .big-text;
  @extend .weak-text;
}
.big-bold-text {
  @extend .big-text;
  @extend .bold-text;
}
.big-error-text {
  @extend .big-text;
  @extend .error-text;
}
.small-text {
  font-size: 12px;
}
.small-weak-text {
  @extend .small-text;
  @extend .weak-text;
}
.small-bold-text {
  @extend .small-text;
  @extend .bold-text;
}
.small-bold-weak-text {
  @extend .small-text;
  @extend .bold-text;
  @extend .weak-text;
}
.small-error-text {
  @extend .small-text;
  @extend .error-text;
}
.letter-spacing04 {
  letter-spacing: 0.4px;
}
.white-text {
  color: white;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-uppercase {
  text-transform: uppercase;
}

.gradient1 {
  background-image: linear-gradient(to bottom, #82c57a, $tealish);
}

.gradient2 {
  background-image: linear-gradient(135deg, #fbda61, #f76b1c);
}

.gradient3 {
  background-image: linear-gradient(135deg, #f5515f, #dd3b4c 28%, #9f031b);
}

.full-width {
  width: 100%;
}
.full-height {
  height: 100%;
}

/* Material checkbox */
//$is-dark-theme: map-get($theme, is-dark);
$primary: $tealish;
$accent: $gunmetal;
$warn: $blush;
$background: $pale-grey;


// The color of the checkbox border.
$checkbox-border-color: $light-blue-grey;

// The color of the checkbox's checkmark / mixedmark.
$checkbox-mark-color: $white;

// NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,
// this does not work well with elements layered on top of one another. To get around this we
// blend the colors together based on the base color and the theme background.
//$white-30pct-opacity-on-dark: #686868;
//$black-26pct-opacity-on-light: #b0b0b0;
//$disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);

.md-checkbox-frame {
  border-color: $checkbox-border-color;
}

.md-checkbox-checkmark {
  fill: $checkbox-mark-color;
}

.md-checkbox-checkmark-path {
  // !important is needed here because a stroke must be set as an attribute on the SVG in order
  // for line animation to work properly.
  stroke: $checkbox-mark-color !important;
}

.md-checkbox-mixedmark {
  background-color: $checkbox-mark-color;
}

.md-checkbox-indeterminate, .md-checkbox-checked {
  &.md-primary .md-checkbox-background {
    background-color: $primary;
  }

  &.md-accent .md-checkbox-background {
    background-color: $accent;
  }

  &.md-warn .md-checkbox-background {
    background-color: $warn;
  }
}

//.md-checkbox-disabled {
//  &.md-checkbox-checked, &.md-checkbox-indeterminate {
//    .md-checkbox-background {
//      background-color: $disabled-color;
//    }
//  }
//
//  &:not(.md-checkbox-checked) {
//    .md-checkbox-frame {
//      border-color: $disabled-color;
//    }
//  }
//}

.md-checkbox:not(.md-checkbox-disabled) {
  &.md-primary .md-checkbox-ripple .md-ripple-foreground {
    background-color: rgba($primary, 0.26);
  }

  &.md-accent .md-checkbox-ripple .md-ripple-foreground {
    background-color: rgba($accent, 0.26);
  }

  &.md-warn .md-checkbox-ripple .md-ripple-foreground {
    background-color: rgba($warn, 0.26);
  }
}
.cdk-visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  text-transform: none;
  width: 1px;
}
[md-ripple] {
  overflow: hidden;
}
.md-ripple-background {
  background-color: rgba(0,0,0,.0588);
  opacity: 0;
  -webkit-transition: opacity .3s linear;
  transition: opacity .3s linear;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.md-ripple-foreground.md-ripple-fade-out {
  opacity: 0;
}
.md-ripple-foreground {
  background-color: rgba(0,0,0,.0588);
  border-radius: 50%;
  pointer-events: none;
  opacity: .25;
  position: absolute;
  -webkit-transition: opacity,-webkit-transform 0ms cubic-bezier(0,0,.2,1);
  transition: opacity,-webkit-transform 0ms cubic-bezier(0,0,.2,1);
  transition: opacity,transform 0ms cubic-bezier(0,0,.2,1);
  transition: opacity,transform 0ms cubic-bezier(0,0,.2,1),-webkit-transform 0ms cubic-bezier(0,0,.2,1);
}
.md-checkbox-inner-container {
  width: 24px !important;
  height: 24px !important;
}
/* Material checkbox */


/* Material input */
$input-underline-color: $light-blue-grey;
$input-placeholder-color: $bluish-grey;
$input-floating-placeholder-color: $tealish;
$input-underline-focused-color: $tealish;
$input-underline-color-accent: $tealish;
$input-underline-color-warn: $tealish;
$input-required-placeholder-color: $blush;
$input-invalid: $blush;
.md-input-placeholder {
  color: $input-placeholder-color;

  &.md-focused {
    color: $input-floating-placeholder-color;

    &.md-accent {
      color: $input-underline-color-accent;
    }
    &.md-warn {
      color: $input-underline-color-warn;
    }
  }
}

md-input-container {
  @extend .big-text;
  @extend .full-width;

  &.ng-dirty.ng-invalid,
  &.ng-touched.ng-invalid {
    .md-input-placeholder {
      color: $input-invalid;
    }
    .md-input-underline {
      border-color: $input-invalid;

      .md-input-ripple {
        background-color: $input-invalid;

        &.md-accent {
          background-color: $input-invalid;
        }
        &.md-warn {
          background-color: $input-invalid;
        }
      }
    }
  }
}

input.md-input-element:-webkit-autofill + .md-input-placeholder,
.md-input-placeholder.md-float.md-focused {
  .md-placeholder-required {
    color: $input-required-placeholder-color;
  }
}

.md-input-underline {
  border-color: $input-underline-color;

  .md-input-ripple {
    background-color: $input-underline-focused-color;

    &.md-accent {
      background-color: $input-underline-color-accent;
    }
    &.md-warn {
      background-color: $input-underline-color-warn;
    }
  }
}
/* Material input */

.splash-logo {
  @include size(70px, 110px);
  @include background-image('logo', 'png', 100%);
  background-repeat: no-repeat;
}

/* Splash loader */
.splash-loader {
  @include size(100%);
  @include fixed(top 0 left 0);
  opacity: 0;
  background: white;
  z-index: -1;
  .splash-logo {
    @include centerer();
  }
}
pcl-root:empty + .splash-loader {
  opacity: 1;
  z-index: 100;
}
/* Splash loader */


/* icon button */
.icon-button {
  @extend .reset-styles;
  @extend .reset-button-styles;
  @include size(18px);
  color: $bluish-grey;
  md-icon {
    @include size(18px);
  }
}
/* icon button */


/* 24px container */
.container {
  @include set-margins-vw();
}
